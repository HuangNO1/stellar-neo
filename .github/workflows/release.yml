# GitHub Actions 工作流程名稱
name: Build and Release StellarNeo

# 工作流程觸發條件
on:
  # 允許手動從 Actions 頁面觸發
  workflow_dispatch:
  # 當建立一個符合 'v*.*.*' 格式的標籤時觸發
  push:
    tags:
      - 'v*.*.*'

# 工作流程執行的任務
jobs:
  # 將所有步驟合併為一個任務
  build_and_release:
    name: Build and Release on ${{ matrix.os }}
    # 使用策略矩陣，在三個主要作業系統上執行
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    # 為此任務申請寫入內容的權限，以便建立 Release
    permissions:
      contents: write

    steps:
      # 步驟 1: 簽出 (Checkout) 您的專案程式碼
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步驟 2: 設定 Python 環境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 步驟 3: 安裝依賴套件
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
          # 新增：印出 PyInstaller 版本以供偵錯
          echo "PyInstaller version:"
          pip show pyinstaller

      # 步驟 4: (僅限 Linux) 安裝 Qt 相關的系統依賴
      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1 libegl1 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-cursor0

      # 步驟 5: 使用 PyInstaller 進行打包
      - name: Build with PyInstaller
        run: pyinstaller StellarNeo.spec

      # 步驟 6: 準備要上傳的檔案 (壓縮)
      - name: Prepare artifact for release
        shell: bash
        run: |
          # 獲取版本號 (從標籤名稱)
          VERSION=${{ github.ref_name }}
          
          # 根據不同作業系統設定輸出檔案名稱和壓縮方式
          if [ "${{ runner.os }}" == "Windows" ]; then
            ARTIFACT_NAME="StellarNeo-${VERSION}-windows-x64"
            7z a -tzip "${ARTIFACT_NAME}.zip" "./dist/StellarNeo/*"
            echo "ASSET_PATH=${ARTIFACT_NAME}.zip" >> $GITHUB_ENV
          else # macOS 和 Linux
            if [ "${{ runner.os }}" == "macOS" ]; then
              ARTIFACT_NAME="StellarNeo-${VERSION}-macos-x64"
              tar -czf "${ARTIFACT_NAME}.tar.gz" -C "./dist" "StellarNeo.app"
            else
              ARTIFACT_NAME="StellarNeo-${VERSION}-linux-x64"
              tar -czf "${ARTIFACT_NAME}.tar.gz" -C "./dist" "StellarNeo"
            fi
            echo "ASSET_PATH=${ARTIFACT_NAME}.tar.gz" >> $GITHUB_ENV
          fi

      # 步驟 7: 使用 softprops/action-gh-release 建立並發布 Release
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          # 將步驟 6 準備好的壓縮檔路徑傳入
          files: ${{ env.ASSET_PATH }}
          # 自動產生發行說明
          generate_release_notes: true
